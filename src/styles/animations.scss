/****************
    Animation
 ****************/

.hover-moveup {
    transition: transform .2s ease-in-out;
    cursor: pointer;
    display: block;
}

.hover-moveup:hover {
    transform: translateY(-3px);
}
.hover-scale {
    transition: transform .2s ease-in-out;
    cursor: pointer;
    display: block;
}

.hover-scale:hover {
    transform: scale(1.1);
}

.hover-underline {
    cursor: pointer;
    position: relative;
}

.hover-underline::before {
    content: "";
    position: absolute;
    display: block;
    width: 100%;
    height: 1px;
    bottom: -2px;
    left: 0;
    background-color: var(--light-color);
    transform: scaleX(0);
    transition: transform 0.3s ease;
}

.hover-underline.color-dark {
    &.hover-underline::before {
        background-color: var(--dark-color);
    }
}

.hover-underline.color-light {
    &.hover-underline::before {
        background-color: var(--light-color);
    }
}


.hover-underline:hover::before {
    transform: scaleX(1);
}

.fade-in {
    animation: fadeIn .3s;
}

.fade-out {
    animation: fadeOut .3s;
}

@keyframes fade-up {
    0% {
        transform: translateY(20vh);
        opacity: 0;
    }

    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes fadeOut {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

@keyframes reveal {
    0% {
        transform: translate(0,120%);
    }
    100% {
        transform: translate(0,0);
    }
}

@keyframes slideDown {
    from{
        transform: translateY(-200%);
    }
    to{
        transform: translateY(0px);

    }
}
@keyframes slideUp {
    from{
        transform: translateY(100%);
    }
    to{
        transform: translateY(0px);

    }
}
@keyframes slideRight {
    from{
        transform: translateX(-110%);
    }
    to{
        transform: translateX(0px);

    }
}
@keyframes slideRightBackwards {
    from{
        transform: translateX(0);
    }
    to{
        transform: translateX(-100%);

    }
}




.is-animated{
    width: fit-content;
    height: fit-content;
    &.centered{
        margin: 0 auto;
    }
    > * {
        opacity: 0;
    }
    &.fullwidth{
        width: 100%;
    }
}

.reveal{
    $default-delay: 0s; // Standard-Verzögerungswert, wenn kein data-delay Attribut definiert ist
    @each $delay in (0s, 100ms, 200ms, 300ms, 400ms, 500ms, 600ms, 700ms, 800ms, 900ms, 1s, 1.1s, 1.2s, 1.3s, 1.4s, 1.5s, 1.6s, 1.7s, 1.8s, 1.9s, 2s, 3s) {
        &[data-delay="#{$delay}"] {
            --delay: #{$delay};
        }
    }
    > *{
        opacity: 0;
        animation: fade-up 1s var(--delay, #{$default-delay}) forwards;
    }
}
.reveal-text{
    $default-delay: 0s; // Standard-Verzögerungswert, wenn kein data-delay Attribut definiert ist
    @each $delay in (0s, 100ms, 200ms, 300ms, 400ms, 500ms, 600ms, 700ms, 800ms, 900ms, 1s, 1.1s, 1.2s, 1.3s, 1.4s, 1.5s, 1.6s, 1.7s, 1.8s, 1.9s, 2s) {
        &[data-delay="#{$delay}"] {
            --delay: #{$delay};
        }
    }
    overflow: hidden;
    > *{
        display: block;
        transform: translateY(120%);
        animation: slideUp 1.5s var(--delay, #{$default-delay}) cubic-bezier(.5, 0, 0 , 1) forwards;
    }
}
.reveal-alt{
    $default-delay: 0s; // Standard-Verzögerungswert, wenn kein data-delay Attribut definiert ist
    @each $delay in (0s, 100ms, 200ms, 300ms, 400ms, 500ms, 600ms, 700ms, 800ms, 900ms, 1s, 1.1s, 1.2s, 1.3s, 1.4s, 1.5s, 1.6s, 1.7s, 1.8s, 1.9s, 2s) {
        &[data-delay="#{$delay}"] {
            --delay: #{$delay};
        }
    }

    opacity: 0;
    animation: fade-up 1s var(--delay, #{$default-delay}) forwards;
}
